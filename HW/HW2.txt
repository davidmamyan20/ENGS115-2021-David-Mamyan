The first function has 2 for loops, one of them is for one variable which means the complexity is equal to n, the other loop has two variables, which makes the complexity equal to n^2, the next function has one loop with one variable, which makes the complexity equal to n, the next two functions have two loops each, which make both of their complexities equal to n^2, the next two functions have two loops, which make their complexities equal to n^2, the last function has one loop, which makes the complexity equal to n, and finally in main, there are no loops, except calling the functions. We are required to calculate the complexity of all functions, so we just have to add all this n or n^2, and find the value. The result we get is 5n^2 + 3n, and according to the Big(O) notation rule, we remove the constants, and take out the n with the highest power, so the answer is O(n^2).
